{"remainingRequest":"/home/webwerks/Documents/Vuejs_Vuex_starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/webwerks/Documents/Vuejs_Vuex_starter/src/views/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/webwerks/Documents/Vuejs_Vuex_starter/src/views/auth/Login.vue","mtime":1591790733863},{"path":"/home/webwerks/Documents/Vuejs_Vuex_starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/webwerks/Documents/Vuejs_Vuex_starter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/webwerks/Documents/Vuejs_Vuex_starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/webwerks/Documents/Vuejs_Vuex_starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHZlZVZhbGlkYXRlIGZyb20gJ3ZlZS12YWxpZGF0ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CgogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkgewogICAgVmVlVmFsaWRhdGUuVmFsaWRhdG9yLmV4dGVuZCgndmVyaWZ5X2NvdXBvbicsIHsKICAgICAgLy8gQ3VzdG9tIHZhbGlkYXRpb24gbWVzc2FnZQogICAgICBnZXRNZXNzYWdlOiAoZmllbGQpID0+IGBUaGUgJHtmaWVsZH0gaXMgbm90IGEgdmFsaWQgY291cG9uLmAsCiAgICAgIC8vIEN1c3RvbSB2YWxpZGF0aW9uIHJ1bGUKICAgICAgdmFsaWRhdGU6ICh2YWx1ZSkgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgY29uc3QgdmFsaWRDb3Vwb25zID0gWydTVU1NRVIyMDE3JywgJ1dJTlRFUjIwMTcnLCAnRkFMTDIwMTcnXTsKICAgICAgICByZXNvbHZlKHsKICAgICAgICAgIHZhbGlkOiB2YWx1ZSAmJiAodmFsaWRDb3Vwb25zLmluZGV4T2YodmFsdWUudG9VcHBlckNhc2UoKSkgPiAtMSkKICAgICAgICB9KTsKICAgICAgfSkKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoewogICAgICBpc0xvZ2luOiAnYXV0aC9pc0xvZ2luJywKICAgIH0pLAogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucygnYXV0aCcsIFsKICAgICAgJ2xvZ2luU3VjY2VzcycsCiAgICAgICdsb2dvdXQnLAogICAgXSksCiAgICBvbkxvZ2luKCkgewogICAgICB0aGlzLmxvZ2luU3VjY2VzcygpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICcvJyB9KTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2F1dGgvbG9naW5TdWNjZXNzJyk7CiAgICB9LAogICAgb25Mb2dvdXQoKSB7CiAgICAgIHRoaXMubG9nb3V0KCk7CiAgICAgIC8vIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdhdXRoL2xvZ291dCcpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\n  <!-- eslint-disable -->\n  <div class=\"login-page pa50\">\n    <h1 class=\"heading \"><label class=\"neo\">Neo</label><label class=\"scrum\">SCRUM</label></h1>\n    <div class=\"loginForm\">\n      <form action=\"dashboard.html\" class=\"shadow-lg p-3 mb-5 bg-white rounded loginForm\">\n        <fieldset>\n          <legend>User-login</legend>\n          <div class=\"form-group\">\n              <label for=\"uname\">Email:</label>\n              <input type=\"email\" v-validate=\"'required'\" class=\"form-control\" id=\"uname\" placeholder=\"Enter username\" name=\"uname\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"pwd\">Password:</label>\n              <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pswd\">\n          </div>\n          <button type=\"submit\" @click=\"onLogin\" class=\"btn btn-primary mr10\">Login</button>\n          <a href=\"admin.html\">Registration</a>\n        </fieldset>\n      </form>\n    </div>\n  </div>\n  <!-- eslint-disable -->\n</template>\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport veeValidate from 'vee-validate';\n\nexport default {\n  data() {\n    return {\n\n    };\n  },\n  created: function() {\n    VeeValidate.Validator.extend('verify_coupon', {\n      // Custom validation message\n      getMessage: (field) => `The ${field} is not a valid coupon.`,\n      // Custom validation rule\n      validate: (value) => new Promise(resolve => {\n        const validCoupons = ['SUMMER2017', 'WINTER2017', 'FALL2017'];\n        resolve({\n          valid: value && (validCoupons.indexOf(value.toUpperCase()) > -1)\n        });\n      })\n    });\n  },\n  computed: {\n    ...mapGetters({\n      isLogin: 'auth/isLogin',\n    }),\n  },\n  methods: {\n    ...mapActions('auth', [\n      'loginSuccess',\n      'logout',\n    ]),\n    onLogin() {\n      this.loginSuccess();\n      this.$router.push({ name: '/' });\n      this.$store.dispatch('auth/loginSuccess');\n    },\n    onLogout() {\n      this.logout();\n      // this.$store.dispatch('auth/logout');\n    },\n  },\n};\n</script>\n"]}]}